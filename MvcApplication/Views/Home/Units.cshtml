@{
    ViewBag.Title = "Units";
	Layout = "~/Views/Shared/_master.cshtml";
}

<h2>Units For Building @ViewBag.BuildingName</h2>

<table id="units" class="table table-striped table-hover ">
	<thead>
		<tr>
			<th>Number</th>
			<th>Description</th>
		</tr>
	</thead>
	<tbody data-bind="foreach: viewModel.units">
		<tr class ="form-group">
			<td><input type="text" class="form-control input-sm" data-bind="value: number"></td>
			<td><input type="text" class="form-control input-sm" data-bind="value: description"></td>
			<td><button class="btn btn-danger btn-sm" data-bind="click: $parent.remove">Delete</button></td>
		</tr>
	</tbody>
</table>
<button class="btn btn-primary btn-sm" data-bind="click: add">New</button>
<button class="btn btn-success btn-sm" data-bind="click: save">Save</button>
<div class="alert alert-dismissable alert-danger" style="display: none;" id="alert-warning">
	<button type="button" class="close" data-dismiss="alert">×</button>
	<h4>Warning!</h4>
	<p>Best check yo self, you sure you wanna do that?</p>
</div>

<div class="alert alert-dismissable alert-success" style="display: none;" id="alert-success">
	<button type="button" class="close" data-dismiss="alert">×</button>
	<h4>Success</h4>
	<p>Your changes have been saved!</p>
</div>
<script type="text/javascript">

	$(function () {
		ko.applyBindings(viewModel);
		viewModel.load();
	});

	var viewModel = function () {

		var that = {};

		that.units = ko.observableArray([]);

		that.load = function() {
			$.getJSON('@Url.RouteUrl("units", new { httproute = "", buildingid = ViewBag.Id })',
			function(units) {
				ko.mapping.fromJS(units, {}, that.units);
			}
		);
	};

		that.add = function () {
		that.units.push({
			"number": ko.observable(""),
			"description": ko.observable(""),
			"added": true
		});
		$(".alert-success").show();
	};

	that.remove = function (unit) {
		$(".alert-danger").show();
		$.ajax({
			url: unit.url(),
			type: "DELETE",
			contentType: "application/json; charset=utf-8",
			dataType: "json",
			success: function (result) {
				that.units.remove(unit);
			},
			error: function (jqXhr) {
				alert(jqXhr.responseText);
				// TODO
			}
		});
	};

	that.save = function () {
		ko.utils.arrayForEach(that.units(), function (unit) {
			if (unit.added) {
				$.ajax({
					url: '@Url.RouteUrl("units", new { httproute = "", buildingid = ViewBag.Id })',
					type: "POST",
					data: ko.toJSON(unit),
					contentType: "application/json; charset=utf-8",
					dataType: "json",
					success: function (result) {
						ko.mapping.fromJS(result, {}, unit);
						unit.added = false;
					},
					error: function (jqXhr) {
						alert(jqXhr.responseText);
						// TODO
					}
				});

			} else {
				$.ajax({
					url: unit.url(),
					type: "PUT",
					contentType: "application/json; charset=utf-8",
					data: ko.toJSON(unit),
					dataType: "json",
					success: function (result) {
					},
					error: function (jqXhr) {
						alert(jqXhr.responseText);
						// TODO
					}
				});
			}
		});
	};

	return that;
}();
</script>