@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_master.cshtml";
}

<h2>Buildings</h2>

<table id="buildings" class="table table-striped table-hover ">
	<thead>
		<tr>
			<th>Name</th>
			<th>Address</th>
			<th>City</th>
			<th>State</th>
			<th>Zip</th>
			<th>Units</th>
		</tr>
	</thead>
	<tbody data-bind="foreach: viewModel.buildings">

		<tr class="form-group">
			<td><input type="text" class="form-control input-sm" data-bind="value: name"></td>
			<td><input type="text" class="form-control input-sm" data-bind="value: address"></td>
			<td><input type="text" class="form-control input-sm" data-bind="value: city"></td>
			<td><input type="text" class="form-control input-sm" data-bind="value: state"></td>
			<td><input type="text" class="form-control input-sm" data-bind="value: zip"></td>
			<td><a data-bind="attr: { href: '@Url.Action("Units", "Home")/' + name() }" class="btn btn-info btn-sm">Units</a></td>
			<td><button class="btn btn-danger btn-sm" data-bind="click: $parent.remove">Delete</button></td>
		</tr>
	</tbody>
</table>
<button class="btn btn-primary btn-sm" data-bind="click: add">New</button>
<button class="btn btn-success btn-sm" data-bind="click: save">Save</button>

<script type="text/javascript">

$(function () {
    ko.applyBindings(viewModel);
    viewModel.load();
});

var viewModel = function () {

	var that = {};

	that.buildings = ko.observableArray([]);

	that.load = function() {
		$.getJSON('@Url.RouteUrl("buildings", new { httproute = "", controller = "buildings" })',
			function(buildings) {
				ko.mapping.fromJS(buildings, {}, that.buildings);
			}
		);
	};

	that.add = function() {
		that.buildings.push({
			"name": ko.observable(""),
			"address": ko.observable(""),
			"city": ko.observable(""),
			"state": ko.observable("MN"),
			"zip": ko.observable(""),
			"added": true
		});
	};

	that.remove = function(building) {
		$.ajax({
			url: building.url(),
			type: "DELETE",
			contentType: "application/json; charset=utf-8",
			dataType: "json",
			success: function (result) {
				that.buildings.remove(building);
			},
			error: function (jqXhr) {
				alert(jqXhr.responseText);
				// TODO
			}
		});
	};

	that.save = function () {
		ko.utils.arrayForEach(that.buildings(), function (building) {
			if (building.added) {
				$.ajax({
					url: "/api/buildings",
					type: "POST",
					data: ko.toJSON(building),
					contentType: "application/json; charset=utf-8",
					dataType: "json",
					success: function (result) {
						ko.mapping.fromJS(result, {}, building);
						building.added = false;
					},
					error: function (jqXhr) {
						alert(jqXhr.responseText);
						// TODO
					}
				});

			} else {
				$.ajax({
					url: building.url(),
					type: "PUT",
					contentType: "application/json; charset=utf-8",
					data: ko.toJSON(building),
					dataType: "json",
					success: function (result) {
					},
					error: function (jqXhr) {
						alert(jqXhr.responseText);
						// TODO
					}
				});
			}
		});
	};

	return that;
}();
</script>